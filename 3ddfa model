# Clone the repo:
!git clone https://github.com/wang-zidu/3DDFA-V3
!cd 3DDFA-V3
!wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
!bash miniconda.sh -b -p /usr/local/miniconda
!rm miniconda.sh
!export PATH="/usr/local/miniconda/bin:$PATH"
!conda init bash
import os
os.environ["PATH"] = "/usr/local/miniconda/bin:" + os.environ["PATH"]
!conda --version
!conda create -n TDDFAV3 python=3.8 -y
!source /usr/local/miniconda/bin/activate TDDFAV3
!which python
!source /usr/local/miniconda/bin/activate TDDFAV3 && which python
!pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
%cd /content/3DDFA-V3/
!pip install -r requirements.txt
!pip install pyngrok
!git clone https://github.com/NVlabs/nvdiffrast.git
!cd nvdiffrast
!pip install .
!cd ..
!ls nvdiffrast
%cd /content/3DDFA-V3/nvdiffrast
!pip install .
%cd nvdiffrast/util/cython_renderer/
!python setup.py build_ext -i
%cd ../../..
!ls -R /content/3DDFA-V3/nvdiffrast
!pip install cython
# Navigate to the Cython renderer directory
%cd /content/3DDFA-V3/util/cython_renderer/

# Build the Cython extension
!python setup.py build_ext -i

# Go back to the main project directory
%cd /content/3DDFA-V3

!wget -P assets https://huggingface.co/datasets/Zidu-Wang/3DDFA-V3/resolve/main/assets/face_model.npy
!wget -P assets https://huggingface.co/datasets/Zidu-Wang/3DDFA-V3/resolve/main/assets/net_recon.pth
!wget -P assets https://huggingface.co/datasets/Zidu-Wang/3DDFA-V3/resolve/main/assets/large_base_net.pth
!wget -P assets https://huggingface.co/datasets/Zidu-Wang/3DDFA-V3/resolve/main/assets/retinaface_resnet50_2020-07-20_old_torch.pth
!wget -P assets https://huggingface.co/datasets/Zidu-Wang/3DDFA-V3/resolve/main/assets/similarity_Lm3D_all.mat

mkdir -p /content/3DDFA-V3/my_images
mkdir -p /content/3DDFA-V3/my_images/results
!pip list | grep numpy  # Check installed NumPy version
!pip uninstall -y numpy
!pip uninstall -y numpy  # Run it twice to ensure complete removal
!rm -rf /usr/local/lib/python3.*/dist-packages/numpy*
!rm -rf /usr/local/miniconda/lib/python3.*/site-packages/numpy*
!pip install numpy==1.26.4
import numpy as np
print(np.__version__)  # Should print 1.26.4 or similar
!python demo.py --inputpath /content/3DDFA-V3/my_images --savepath /content/3DDFA-V3/my_images/results --device cpu --iscrop 1 --detector retinaface --ldm68 1 --useTex 1 --extractTex 1 --backbone resnet50
!pip show pyngrok
import sys
sys.path.append("/usr/local/miniconda/lib/python3.12/site-packages")

from pyngrok import ngrok
from pyngrok import ngrok
ngrok.set_auth_token("2uMWVUGqdhDhw8QLoiQkeVywYwW_6QaNdJLEmk3WvxUrjWzpN")
!pip install fastapi uvicorn python-multipart pyngrok
!pip install flask flask-ngrok
!pip install flask-cors
from flask_cors import CORS

app = Flask(__name__)
CORS(app)  # Allow all origins
CORS(app, resources={r"/*": {"origins": "http://localhost:3000"}})  # Adjust port if needed
!nohup python -u app.py > flask.log 2>&1 &






